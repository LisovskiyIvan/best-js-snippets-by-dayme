const fs = require('fs');
const path = require('path');

// –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª —Å–Ω–∏–ø–ø–µ—Ç–æ–≤
const snippetsPath = path.join(__dirname, 'snippets', 'snippets.code-snippets');
const snippetsContent = fs.readFileSync(snippetsPath, 'utf8');

// –ü–∞—Ä—Å–∏–º JSON (—É–¥–∞–ª—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏)
const cleanJson = snippetsContent.replace(/\/\/.*$/gm, '').replace(/,(\s*[}\]])/g, '$1');
const snippets = JSON.parse(cleanJson);

// –ì—Ä—É–ø–ø–∏—Ä—É–µ–º —Å–Ω–∏–ø–ø–µ—Ç—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
const categories = {
    'üñ•Ô∏è Console': ['Console Log', 'Console warn', 'Console Time', 'Console TimeEnd'],
    '‚ö° Functions': ['Arrow Function', 'Async Arrow Function', 'Async Function', 'Try Catch'],
    'üîÑ Loops & Arrays': ['For Loop', 'ForEach', 'ForOf', 'Map', 'Filter', 'Find', 'Some', 'Every'],
    'üì¶ Objects': ['Object keys', 'Object values', 'Object entries', 'Destructuring Assignment'],
    'üîÆ Async & Promises': ['Promise'],
    'üìã Modules': ['Import', 'Export Default', 'Export Default Class'],
    '‚è∞ Timers': ['Set Timeout', 'Set Interval'],
    'üõ†Ô∏è Utilities': ['Template Literal', 'this']
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–æ–¥–∞
function formatSnippetCode(snippet) {
    const body = Array.isArray(snippet.body) ? snippet.body : [snippet.body];

    // –ï—Å–ª–∏ –∫–æ–¥ –∫–æ—Ä–æ—Ç–∫–∏–π (–æ–¥–Ω–∞ —Å—Ç—Ä–æ–∫–∞ –±–µ–∑ —Ç–∞–±–æ–≤), –ø–æ–∫–∞–∑—ã–≤–∞–µ–º inline
    if (body.length === 1 && !body[0].includes('\t') && body[0].length < 50) {
        return `\`${body[0].replace(/\$/g, '\\$')}\``;
    }

    // –î–ª—è –º–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω–æ–≥–æ –∫–æ–¥–∞ —Å–æ–∑–¥–∞–µ–º –±–ª–æ–∫
    const formattedCode = body
        .map(line => line.replace(/\t/g, '  ').replace(/\$/g, '\\$'))
        .join('\n');

    return '```javascript\n' + formattedCode + '\n```';
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ–∫—Ü–∏–∏ —Å–Ω–∏–ø–ø–µ—Ç–æ–≤
function createSnippetSection(categorySnippets) {
    let section = '';

    categorySnippets.forEach(snippetName => {
        const snippet = snippets[snippetName];
        if (snippet) {
            const prefix = Array.isArray(snippet.prefix) ? snippet.prefix.join(', ') : snippet.prefix;
            const description = snippet.description;
            const code = formatSnippetCode(snippet);

            section += `#### \`${prefix}\` - ${description}\n\n`;
            section += code + '\n\n';
        }
    });

    return section;
}

// –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º README
let readme = `# üöÄ Best JS Snippets by Dayme

> –ö–æ–ª–ª–µ–∫—Ü–∏—è —Å–∞–º—ã—Ö –ø–æ–ª–µ–∑–Ω—ã—Ö JavaScript —Å–Ω–∏–ø–ø–µ—Ç–æ–≤ –¥–ª—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏

[![Version](https://img.shields.io/badge/version-0.0.1-blue.svg)](https://github.com/LisovskiyIvan/best-js-snippets-by-dayme)
[![License](https://img.shields.io/badge/license-MIT-green.svg)](LICENSE)
[![GitHub](https://img.shields.io/badge/GitHub-LisovskiyIvan-black.svg)](https://github.com/LisovskiyIvan)

–£—Å–∫–æ—Ä—å—Ç–µ —Å–≤–æ–π workflow —Å –ø–æ–º–æ—â—å—é —ç—Ç–∏—Ö –≥–æ—Ç–æ–≤—ã—Ö —Ñ—Ä–∞–≥–º–µ–Ω—Ç–æ–≤ –∫–æ–¥–∞! –ö–∞–∂–¥—ã–π —Å–Ω–∏–ø–ø–µ—Ç —Ç—â–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–¥—É–º–∞–Ω –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏.

**–ê–≤—Ç–æ—Ä:** [Ivan Lisovskiy](https://github.com/LisovskiyIvan)

## üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞

1. –û—Ç–∫—Ä–æ–π—Ç–µ VS Code
2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ Extensions (\`Ctrl+Shift+X\`)
3. –ù–∞–π–¥–∏—Ç–µ "**best js snippets by dayme**"
4. –ù–∞–∂–º–∏—Ç–µ **Install**

## üéØ –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å

1. –û—Ç–∫—Ä–æ–π—Ç–µ JavaScript —Ñ–∞–π–ª (\`.js\`, \`.jsx\`, \`.ts\`, \`.tsx\`)
2. –ù–∞—á–Ω–∏—Ç–µ –Ω–∞–±–∏—Ä–∞—Ç—å **–ø—Ä–µ—Ñ–∏–∫—Å** —Å–Ω–∏–ø–ø–µ—Ç–∞
3. –ù–∞–∂–º–∏—Ç–µ \`Tab\` –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ –∫–æ–¥–∞
4. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ \`Tab\` –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –º–µ–∂–¥—É –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏

## üìö –°–Ω–∏–ø–ø–µ—Ç—ã

`;

// –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ –∏—Ö —Å–Ω–∏–ø–ø–µ—Ç—ã
Object.entries(categories).forEach(([categoryName, categorySnippets]) => {
    // –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å–Ω–∏–ø–ø–µ—Ç—ã
    const existingSnippets = categorySnippets.filter(name => snippets[name]);

    if (existingSnippets.length > 0) {
        readme += `### ${categoryName}\n\n`;
        readme += createSnippetSection(existingSnippets);
    }
});

// –î–æ–±–∞–≤–ª—è–µ–º —Å–Ω–∏–ø–ø–µ—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –ø–æ–ø–∞–ª–∏ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
const categorizedSnippets = Object.values(categories).flat();
const uncategorizedSnippets = Object.keys(snippets).filter(name => !categorizedSnippets.includes(name));

if (uncategorizedSnippets.length > 0) {
    readme += `### üîß –î—Ä—É–≥–∏–µ\n\n`;
    readme += createSnippetSection(uncategorizedSnippets);
}

// –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
readme += `## üöÄ –ë—ã—Å—Ç—Ä—ã–π —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫

| –ü—Ä–µ—Ñ–∏–∫—Å | –û–ø–∏—Å–∞–Ω–∏–µ | –ö–∞—Ç–µ–≥–æ—Ä–∏—è |
|---------|----------|-----------|
`;

Object.entries(categories).forEach(([categoryName, categorySnippets]) => {
    categorySnippets.forEach(snippetName => {
        const snippet = snippets[snippetName];
        if (snippet) {
            const prefix = Array.isArray(snippet.prefix) ? snippet.prefix.join(', ') : snippet.prefix;
            const cleanCategoryName = categoryName.replace(/[üñ•Ô∏è‚ö°üîÑüì¶üîÆüìã‚è∞üõ†Ô∏è]\s*/, '');
            readme += `| \`${prefix}\` | ${snippet.description} | ${cleanCategoryName} |\n`;
        }
    });
});

// –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
readme += `
## ‚ú® –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏

- üéØ **–ë—ã—Å—Ç—Ä—ã–µ –ø—Ä–µ—Ñ–∏–∫—Å—ã** - –∫–æ—Ä–æ—Ç–∫–∏–µ –∏ –∑–∞–ø–æ–º–∏–Ω–∞—é—â–∏–µ—Å—è —Ç—Ä–∏–≥–≥–µ—Ä—ã
- üìç **–£–º–Ω—ã–µ –∫—É—Ä—Å–æ—Ä—ã** - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ –Ω—É–∂–Ω—ã—Ö –º–µ—Å—Ç–∞—Ö  
- üîÑ **–ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ Tab** - –ø–µ—Ä–µ—Ö–æ–¥ –º–µ–∂–¥—É –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
- üí° **IntelliSense** - –ø–æ–¥—Å–∫–∞–∑–∫–∏ –∏ –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ
- üé® **–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å** - ES6+ –∏ –ª—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏

## üéÆ –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è

### –ë—ã—Å—Ç—Ä–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
\`\`\`javascript
// –ù–∞–±–µ—Ä–∏—Ç–µ: cl + Tab
console.log(cursor_here);
\`\`\`

### –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä–µ–ª–æ—á–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏  
\`\`\`javascript
// –ù–∞–±–µ—Ä–∏—Ç–µ: af + Tab
const functionName = (params) => {
    cursor_here
};
\`\`\`

### –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
\`\`\`javascript
// –ù–∞–±–µ—Ä–∏—Ç–µ: aaf + Tab  
const functionName = async (params) => {
    cursor_here
};
\`\`\`

## ü§ù –í–∫–ª–∞–¥ –≤ –ø—Ä–æ–µ–∫—Ç

–ï—Å—Ç—å –∏–¥–µ–∏ –¥–ª—è –Ω–æ–≤—ã—Ö —Å–Ω–∏–ø–ø–µ—Ç–æ–≤? 
- –°–æ–∑–¥–∞–π—Ç–µ [Issue](https://github.com/LisovskiyIvan/best-js-snippets-by-dayme/issues)
- –û—Ç–ø—Ä–∞–≤—å—Ç–µ [Pull Request](https://github.com/LisovskiyIvan/best-js-snippets-by-dayme/pulls)

## üìÑ –õ–∏—Ü–µ–Ω–∑–∏—è

MIT License - –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–≤–æ–±–æ–¥–Ω–æ!

## üîÑ –ò—Å—Ç–æ—Ä–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π

### v0.0.1 (–¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è)
- ‚úÖ –ë–∞–∑–æ–≤—ã–π –Ω–∞–±–æ—Ä JavaScript —Å–Ω–∏–ø–ø–µ—Ç–æ–≤
- ‚úÖ –ö–æ–Ω—Å–æ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –∏ –æ—Ç–ª–∞–¥–∫–∞
- ‚úÖ –§—É–Ω–∫—Ü–∏–∏ –∏ —Å—Ç—Ä–µ–ª–æ—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏  
- ‚úÖ –¶–∏–∫–ª—ã –∏ –º–µ—Ç–æ–¥—ã –º–∞—Å—Å–∏–≤–æ–≤
- ‚úÖ –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –∏ –ø—Ä–æ–º–∏—Å—ã
- ‚úÖ –†–∞–±–æ—Ç–∞ —Å –æ–±—ä–µ–∫—Ç–∞–º–∏
- ‚úÖ ES6+ –º–æ–¥—É–ª–∏ –∏ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å

---

<div align="center">

**–°–¥–µ–ª–∞–Ω–æ —Å ‚ù§Ô∏è –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤**

[‚≠ê –ü–æ—Å—Ç–∞–≤—å—Ç–µ –∑–≤–µ–∑–¥—É](https://github.com/LisovskiyIvan/best-js-snippets-by-dayme) ‚Ä¢ [üêõ –°–æ–æ–±—â–∏—Ç—å –æ–± –æ—à–∏–±–∫–µ](https://github.com/LisovskiyIvan/best-js-snippets-by-dayme/issues) ‚Ä¢ [üí° –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∏–¥–µ—é](https://github.com/LisovskiyIvan/best-js-snippets-by-dayme/discussions)

</div>
`;

// –ó–∞–ø–∏—Å—ã–≤–∞–µ–º README
fs.writeFileSync(path.join(__dirname, 'README.md'), readme, 'utf8');

// –í—ã–≤–æ–¥–∏–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
const totalSnippets = Object.keys(snippets).length;
const totalCategories = Object.keys(categories).length;

console.log('‚úÖ README.md —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω!');
console.log(`üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:`);
console.log(`   ‚Ä¢ –í—Å–µ–≥–æ —Å–Ω–∏–ø–ø–µ—Ç–æ–≤: ${totalSnippets}`);
console.log(`   ‚Ä¢ –ö–∞—Ç–µ–≥–æ—Ä–∏–π: ${totalCategories}`);
console.log(`   ‚Ä¢ –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: ${Math.round(readme.length / 1024)} KB`);